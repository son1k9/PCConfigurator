<Application x:Class="PCConfigurator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PCConfigurator"
             Startup="Application_Startup"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Application.Resources>
        <!-- Components list-->
        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="componentsListHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center" LineHeight="16" MaxHeight="32" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGridCell" x:Key="componentsListCell">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e5f3ff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e5f3ff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#cde8ff"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="componentsList">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource componentsListHeader}"/>
            <Setter Property="MinRowHeight" Value="35"/>
            <Setter Property="CellStyle" Value="{StaticResource componentsListCell}"/>
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SelectionMode" Value="Single"/>

        </Style>

        <!--Buttons-->
        <Style TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" 
                                CornerRadius="4" Padding="10" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                              SnapsToDevicePixels="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#EFEFEF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#F4F4F4"/>
                    <Setter Property="Foreground" Value="#474747"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ButtonIcon">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#212121"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#666666"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
            
        <!-- Context menu-->
        <Style TargetType="ContextMenu">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#F1F1F1"/>
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
        </Style>
        
        <!-- New component-->

        <Style TargetType="{x:Type TextBlock}" x:Key="textBlockNewComponent">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="textBoxNewComponent">
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="comboBoxNewComponent">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="{x:Type ListBox}" x:Key="listBoxNewComponent">
            <Setter Property="BorderBrush" Value="#DBDBDB"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="{x:Type Slider}" x:Key="sliderNewComponent">
            <Setter Property="Foreground" Value="#DBDBDB"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="TickPlacement" Value="None"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        
        <Style TargetType="{x:Type CheckBox}" x:Key="checkBoxComponent">
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="StackPanel" x:Key="inputStackPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10 5 10 5"/>
        </Style>

    </Application.Resources>
</Application>
