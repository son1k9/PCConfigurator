### YamlMime:ManagedReference
items:
- uid: PCConfigurator.Commands.NavigateCommand`1
  commentId: T:PCConfigurator.Commands.NavigateCommand`1
  id: NavigateCommand`1
  parent: PCConfigurator.Commands
  children:
  - PCConfigurator.Commands.NavigateCommand`1.#ctor(PCConfigurator.ViewModel.ComponentsViewModel)
  - PCConfigurator.Commands.NavigateCommand`1.CanExecute(System.Object)
  - PCConfigurator.Commands.NavigateCommand`1.CanExecuteChanged
  - PCConfigurator.Commands.NavigateCommand`1.Execute(System.Object)
  langs:
  - csharp
  - vb
  name: NavigateCommand<T>
  nameWithType: NavigateCommand<T>
  fullName: PCConfigurator.Commands.NavigateCommand<T>
  type: Class
  source:
    remote:
      path: PCConfigurator/Commands/NavigateCommand.cs
      branch: master
      repo: https://github.com/son1k9/PCConfigurator.git
    id: NavigateCommand
    path: ../PCConfigurator/Commands/NavigateCommand.cs
    startLine: 6
  assemblies:
  - PCConfigurator
  namespace: PCConfigurator.Commands
  syntax:
    content: 'public class NavigateCommand<T> : ICommand where T : ComponentViewModel, new()'
    typeParameters:
    - id: T
    content.vb: Public Class NavigateCommand(Of T As {ComponentViewModel, New}) Implements ICommand
  inheritance:
  - System.Object
  implements:
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: NavigateCommand(Of T)
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T)
  name.vb: NavigateCommand(Of T)
- uid: PCConfigurator.Commands.NavigateCommand`1.#ctor(PCConfigurator.ViewModel.ComponentsViewModel)
  commentId: M:PCConfigurator.Commands.NavigateCommand`1.#ctor(PCConfigurator.ViewModel.ComponentsViewModel)
  id: '#ctor(PCConfigurator.ViewModel.ComponentsViewModel)'
  parent: PCConfigurator.Commands.NavigateCommand`1
  langs:
  - csharp
  - vb
  name: NavigateCommand(ComponentsViewModel)
  nameWithType: NavigateCommand<T>.NavigateCommand(ComponentsViewModel)
  fullName: PCConfigurator.Commands.NavigateCommand<T>.NavigateCommand(PCConfigurator.ViewModel.ComponentsViewModel)
  type: Constructor
  source:
    remote:
      path: PCConfigurator/Commands/NavigateCommand.cs
      branch: master
      repo: https://github.com/son1k9/PCConfigurator.git
    id: .ctor
    path: ../PCConfigurator/Commands/NavigateCommand.cs
    startLine: 6
  assemblies:
  - PCConfigurator
  namespace: PCConfigurator.Commands
  syntax:
    content: public NavigateCommand(ComponentsViewModel viewModel)
    parameters:
    - id: viewModel
      type: PCConfigurator.ViewModel.ComponentsViewModel
    content.vb: Public Sub New(viewModel As ComponentsViewModel)
  overload: PCConfigurator.Commands.NavigateCommand`1.#ctor*
  nameWithType.vb: NavigateCommand(Of T).New(ComponentsViewModel)
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).New(PCConfigurator.ViewModel.ComponentsViewModel)
  name.vb: New(ComponentsViewModel)
- uid: PCConfigurator.Commands.NavigateCommand`1.CanExecuteChanged
  commentId: E:PCConfigurator.Commands.NavigateCommand`1.CanExecuteChanged
  id: CanExecuteChanged
  parent: PCConfigurator.Commands.NavigateCommand`1
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: NavigateCommand<T>.CanExecuteChanged
  fullName: PCConfigurator.Commands.NavigateCommand<T>.CanExecuteChanged
  type: Event
  source:
    remote:
      path: PCConfigurator/Commands/NavigateCommand.cs
      branch: master
      repo: https://github.com/son1k9/PCConfigurator.git
    id: CanExecuteChanged
    path: ../PCConfigurator/Commands/NavigateCommand.cs
    startLine: 11
  assemblies:
  - PCConfigurator
  namespace: PCConfigurator.Commands
  summary: Occurs when changes occur that affect whether or not the command should execute.
  example: []
  syntax:
    content: public event EventHandler? CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
  nameWithType.vb: NavigateCommand(Of T).CanExecuteChanged
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).CanExecuteChanged
- uid: PCConfigurator.Commands.NavigateCommand`1.CanExecute(System.Object)
  commentId: M:PCConfigurator.Commands.NavigateCommand`1.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: PCConfigurator.Commands.NavigateCommand`1
  langs:
  - csharp
  - vb
  name: CanExecute(object?)
  nameWithType: NavigateCommand<T>.CanExecute(object?)
  fullName: PCConfigurator.Commands.NavigateCommand<T>.CanExecute(object?)
  type: Method
  source:
    remote:
      path: PCConfigurator/Commands/NavigateCommand.cs
      branch: master
      repo: https://github.com/son1k9/PCConfigurator.git
    id: CanExecute
    path: ../PCConfigurator/Commands/NavigateCommand.cs
    startLine: 13
  assemblies:
  - PCConfigurator
  namespace: PCConfigurator.Commands
  summary: Defines the method that determines whether the command can execute in its current state.
  example: []
  syntax:
    content: public bool CanExecute(object? parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this command can be executed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: PCConfigurator.Commands.NavigateCommand`1.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType.vb: NavigateCommand(Of T).CanExecute(Object)
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).CanExecute(Object)
  name.vb: CanExecute(Object)
- uid: PCConfigurator.Commands.NavigateCommand`1.Execute(System.Object)
  commentId: M:PCConfigurator.Commands.NavigateCommand`1.Execute(System.Object)
  id: Execute(System.Object)
  parent: PCConfigurator.Commands.NavigateCommand`1
  langs:
  - csharp
  - vb
  name: Execute(object?)
  nameWithType: NavigateCommand<T>.Execute(object?)
  fullName: PCConfigurator.Commands.NavigateCommand<T>.Execute(object?)
  type: Method
  source:
    remote:
      path: PCConfigurator/Commands/NavigateCommand.cs
      branch: master
      repo: https://github.com/son1k9/PCConfigurator.git
    id: Execute
    path: ../PCConfigurator/Commands/NavigateCommand.cs
    startLine: 18
  assemblies:
  - PCConfigurator
  namespace: PCConfigurator.Commands
  summary: Defines the method to be called when the command is invoked.
  example: []
  syntax:
    content: public void Execute(object? parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Sub Execute(parameter As Object)
  overload: PCConfigurator.Commands.NavigateCommand`1.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType.vb: NavigateCommand(Of T).Execute(Object)
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).Execute(Object)
  name.vb: Execute(Object)
references:
- uid: PCConfigurator.Commands
  commentId: N:PCConfigurator.Commands
  href: PCConfigurator.html
  name: PCConfigurator.Commands
  nameWithType: PCConfigurator.Commands
  fullName: PCConfigurator.Commands
  spec.csharp:
  - uid: PCConfigurator
    name: PCConfigurator
    href: PCConfigurator.html
  - name: .
  - uid: PCConfigurator.Commands
    name: Commands
    href: PCConfigurator.Commands.html
  spec.vb:
  - uid: PCConfigurator
    name: PCConfigurator
    href: PCConfigurator.html
  - name: .
  - uid: PCConfigurator.Commands
    name: Commands
    href: PCConfigurator.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: PCConfigurator.Commands.NavigateCommand`1.#ctor*
  commentId: Overload:PCConfigurator.Commands.NavigateCommand`1.#ctor
  href: PCConfigurator.Commands.NavigateCommand-1.html#PCConfigurator_Commands_NavigateCommand_1__ctor_PCConfigurator_ViewModel_ComponentsViewModel_
  name: NavigateCommand
  nameWithType: NavigateCommand<T>.NavigateCommand
  fullName: PCConfigurator.Commands.NavigateCommand<T>.NavigateCommand
  nameWithType.vb: NavigateCommand(Of T).New
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).New
  name.vb: New
- uid: PCConfigurator.ViewModel.ComponentsViewModel
  commentId: T:PCConfigurator.ViewModel.ComponentsViewModel
  parent: PCConfigurator.ViewModel
  href: PCConfigurator.ViewModel.ComponentsViewModel.html
  name: ComponentsViewModel
  nameWithType: ComponentsViewModel
  fullName: PCConfigurator.ViewModel.ComponentsViewModel
- uid: PCConfigurator.ViewModel
  commentId: N:PCConfigurator.ViewModel
  href: PCConfigurator.html
  name: PCConfigurator.ViewModel
  nameWithType: PCConfigurator.ViewModel
  fullName: PCConfigurator.ViewModel
  spec.csharp:
  - uid: PCConfigurator
    name: PCConfigurator
    href: PCConfigurator.html
  - name: .
  - uid: PCConfigurator.ViewModel
    name: ViewModel
    href: PCConfigurator.ViewModel.html
  spec.vb:
  - uid: PCConfigurator
    name: PCConfigurator
    href: PCConfigurator.html
  - name: .
  - uid: PCConfigurator.ViewModel
    name: ViewModel
    href: PCConfigurator.ViewModel.html
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecutechanged
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: PCConfigurator.Commands.NavigateCommand`1.CanExecute*
  commentId: Overload:PCConfigurator.Commands.NavigateCommand`1.CanExecute
  href: PCConfigurator.Commands.NavigateCommand-1.html#PCConfigurator_Commands_NavigateCommand_1_CanExecute_System_Object_
  name: CanExecute
  nameWithType: NavigateCommand<T>.CanExecute
  fullName: PCConfigurator.Commands.NavigateCommand<T>.CanExecute
  nameWithType.vb: NavigateCommand(Of T).CanExecute
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).CanExecute
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  name: CanExecute(object)
  nameWithType: ICommand.CanExecute(object)
  fullName: System.Windows.Input.ICommand.CanExecute(object)
  nameWithType.vb: ICommand.CanExecute(Object)
  fullName.vb: System.Windows.Input.ICommand.CanExecute(Object)
  name.vb: CanExecute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: PCConfigurator.Commands.NavigateCommand`1.Execute*
  commentId: Overload:PCConfigurator.Commands.NavigateCommand`1.Execute
  href: PCConfigurator.Commands.NavigateCommand-1.html#PCConfigurator_Commands_NavigateCommand_1_Execute_System_Object_
  name: Execute
  nameWithType: NavigateCommand<T>.Execute
  fullName: PCConfigurator.Commands.NavigateCommand<T>.Execute
  nameWithType.vb: NavigateCommand(Of T).Execute
  fullName.vb: PCConfigurator.Commands.NavigateCommand(Of T).Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  name: Execute(object)
  nameWithType: ICommand.Execute(object)
  fullName: System.Windows.Input.ICommand.Execute(object)
  nameWithType.vb: ICommand.Execute(Object)
  fullName.vb: System.Windows.Input.ICommand.Execute(Object)
  name.vb: Execute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
